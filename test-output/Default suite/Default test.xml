<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Yeshwant" ignored="0" name="Default test" tests="1" failures="0" timestamp="18 Apr 2018 16:58:28 GMT" time="0.106" errors="0">
  <testcase name="@BeforeTest beforeTest" time="0.075" classname="Example.NewTest">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: C:\Users\eryes\Desktop\Learning\Selenium\Software\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\eryes\Desktop\Learning\Selenium\Software\chromedriver.exeat com.google.common.base.Preconditions.checkState(Preconditions.java:534)at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136)at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:339)at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)at Example.NewTest.beforeTest(NewTest.java:19)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:451)at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)at org.testng.TestRunner.beforeRun(TestRunner.java:529)at org.testng.TestRunner.run(TestRunner.java:497)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="Example.NewTest">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="testEasy" time="0.0" classname="Example.NewTest">
    <skipped/>
  </testcase> <!-- testEasy -->
</testsuite> <!-- Default test -->
